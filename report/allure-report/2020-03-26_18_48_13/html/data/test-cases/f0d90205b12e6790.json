{
  "uid" : "f0d90205b12e6790",
  "name" : "test_buycar.TestShoppingTrolley.test_add_shopping_trolley",
  "fullName" : "testcases.test_buycar.TestShoppingTrolley.test_add_shopping_trolley",
  "historyId" : "dc13f04a60fd2cff91c28cae7f54c401",
  "time" : {
    "start" : 1585219695263,
    "stop" : 1585219695271,
    "duration" : 8
  },
  "description" : "\n\nAuthor:micheryu\nDate:2020/3/20\nMotto: 能用脑，就别动手~\n",
  "descriptionHtml" : "<p>Author:micheryu\nDate:2020/3/20\nMotto: 能用脑，就别动手~</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'success' == 'failed'\n  - success\n  + failed",
  "statusTrace" : "self = <testcases.test_buycar.TestShoppingTrolley object at 0x0000025EC61BA7C8>\n\n    @allure.story('加入购物车')  # 用story说明用户场景，可以理解为JIRA中的Story\n    def test_add_shopping_trolley(self):\n        login('yubaoqiang', '10154')  # 步骤1，调用“step函数”\n        with allure.step(\"浏览商品\"):  # 步骤2，step的参数将会打印到测试报告中\n            allure.attach('笔记本', '商品1')  # attach可以打印一些附加信息\n            allure.attach('手机', '商品2')\n        with allure.step(\"点击商品\"):  # 步骤3\n            pass\n        with allure.step(\"校验结果\"):  # 步骤4\n            allure.attach('添加购物车成功', '期望结果')\n            allure.attach('添加购物车失败', '实际结果')\n>           assert 'success' == 'failed'\nE           AssertionError: assert 'success' == 'failed'\nE             - success\nE             + failed\n\ntest_buycar.py:26: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'success' == 'failed'\n  - success\n  + failed",
    "statusTrace" : "self = <testcases.test_buycar.TestShoppingTrolley object at 0x0000025EC61BA7C8>\n\n    @allure.story('加入购物车')  # 用story说明用户场景，可以理解为JIRA中的Story\n    def test_add_shopping_trolley(self):\n        login('yubaoqiang', '10154')  # 步骤1，调用“step函数”\n        with allure.step(\"浏览商品\"):  # 步骤2，step的参数将会打印到测试报告中\n            allure.attach('笔记本', '商品1')  # attach可以打印一些附加信息\n            allure.attach('手机', '商品2')\n        with allure.step(\"点击商品\"):  # 步骤3\n            pass\n        with allure.step(\"校验结果\"):  # 步骤4\n            allure.attach('添加购物车成功', '期望结果')\n            allure.attach('添加购物车失败', '实际结果')\n>           assert 'success' == 'failed'\nE           AssertionError: assert 'success' == 'failed'\nE             - success\nE             + failed\n\ntest_buycar.py:26: AssertionError",
    "steps" : [ {
      "name" : "用户登录",
      "time" : {
        "start" : 1585219695265,
        "stop" : 1585219695265,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "浏览商品",
      "time" : {
        "start" : 1585219695265,
        "stop" : 1585219695265,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a9f8f9f5a552387f",
        "name" : "笔记本",
        "source" : "a9f8f9f5a552387f.txt",
        "type" : "text/plain",
        "size" : 7
      }, {
        "uid" : "183455f94249a448",
        "name" : "手机",
        "source" : "183455f94249a448.txt",
        "type" : "text/plain",
        "size" : 7
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "点击商品",
      "time" : {
        "start" : 1585219695265,
        "stop" : 1585219695265,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "校验结果",
      "time" : {
        "start" : 1585219695265,
        "stop" : 1585219695265,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "self = <testcases.test_buycar.TestShoppingTrolley object at 0x0000025EC61BA7C8>\n\n    @allure.story('加入购物车')  # 用story说明用户场景，可以理解为JIRA中的Story\n    def test_add_shopping_trolley(self):\n        login('yubaoqiang', '10154')  # 步骤1，调用“step函数”\n        with allure.step(\"浏览商品\"):  # 步骤2，step的参数将会打印到测试报告中\n            allure.attach('笔记本', '商品1')  # attach可以打印一些附加信息\n            allure.attach('手机', '商品2')\n        with allure.step(\"点击商品\"):  # 步骤3\n            pass\n        with allure.step(\"校验结果\"):  # 步骤4\n            allure.attach('添加购物车成功', '期望结果')\n            allure.attach('添加购物车失败', '实际结果')\n>           assert 'success' == 'failed'\nE           AssertionError: assert 'success' == 'failed'\nE             - success\nE             + failed\n\ntest_buycar.py:26: AssertionError",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "25e08942b749314",
        "name" : "添加购物车成功",
        "source" : "25e08942b749314.txt",
        "type" : "text/plain",
        "size" : 12
      }, {
        "uid" : "3a1e67fde48b9047",
        "name" : "添加购物车失败",
        "source" : "3a1e67fde48b9047.txt",
        "type" : "text/plain",
        "size" : 12
      } ],
      "parameters" : [ ],
      "attachmentsCount" : 2,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 4,
    "shouldDisplayMessage" : true,
    "stepsCount" : 4,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "购物车功能"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "host",
    "value" : "yubaoqiangwb10154"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "severity",
    "value" : "normal"
  }, {
    "name" : "story",
    "value" : "加入购物车"
  }, {
    "name" : "thread",
    "value" : "2624-MainThread"
  }, {
    "name" : "suite",
    "value" : "testcases"
  }, {
    "name" : "testClass",
    "value" : "testcases"
  }, {
    "name" : "testMethod",
    "value" : "test_buycar.TestShoppingTrolley.test_add_shopping_trolley"
  }, {
    "name" : "package",
    "value" : "testcases"
  }, {
    "name" : "resultFormat",
    "value" : "allure1"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "f0d90205b12e6790.json",
  "parameterValues" : [ ]
}